{"version":3,"sources":["AddTodo.js","TodoItem.js","App.js","serviceWorker.js","index.js"],"names":["AddTodo","state","todotext","changeTodoText","event","_this","setState","target","value","submitHandler","preventDefault","props","addTodoToState","react_default","a","createElement","onSubmit","this","className","type","placeholder","onChange","disabled","style","display","concat","React","Component","TodoItem","isEditing","toggleEditing","clickHandler","toggleComplete","index","deleteTodo","deleteTodoFromState","editTodoSubmitHandler","editTodoFromState","newText","_this2","_this$props","todo","editIndex","borderBottom","defaultValue","text","ref","node","onClick","paddingTop","completed","paddingLeft","checked","visibility","App","todos","JSON","parse","localStorage","getItem","newTodos","map","i","Object","objectSpread","filter","setItem","stringify","toConsumableArray","height","overflow","src_TodoItem","key","src_AddTodo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71281ae5.chunk.js","sourcesContent":["import React from 'react';\n\nclass AddTodo extends React.Component {\n\n  state = {\n    todotext: '',\n  }\n\n  changeTodoText = (event) => {\n    this.setState({\n      todotext: event.target.value,\n    })\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault(); // to prevent page reload after form submit.\n\n    if(this.state.todotext === \"\"){\n      return; // this will terminate function here\n    }\n\n    this.props.addTodoToState(this.state.todotext);\n\n    this.setState({\n      todotext: '',\n    });\n\n  };\n\n  render(){\n\n    return(\n      <div>\n        <form onSubmit={this.submitHandler} className=\"\">\n          <div className=\"form-group row mb-0\">\n            <div className=\"col-9 pr-0\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Type you todo here...\"\n                onChange={this.changeTodoText}\n                value={this.state.todotext}\n              />\n            </div>\n            <div className=\"col-3\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-outline-primary btn-block\"\n                disabled={this.state.todotext ? false : 'disabled'}\n              >\n                Add Todo\n              </button>\n            </div>\n          </div>\n          <div className=\"valid-feedback\" style={{display : `${this.state.todotext ? 'none': 'block'}`}}>Please enter your todo</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddTodo;","import React from 'react';\n\nclass TodoItem extends React.Component {\n\n  state = {\n    isEditing: false,\n  }\n\n  toggleEditing = () => {\n    this.setState({\n      isEditing: !this.state.isEditing\n    });\n  }\n\n  clickHandler = () => {\n    this.props.toggleComplete(this.props.index);\n  }\n\n  deleteTodo = () => {\n    this.props.deleteTodoFromState(this.props.index);\n  }\n\n  editTodoSubmitHandler = (event) => {\n    event.preventDefault();\n    this.props.editTodoFromState(this.props.index, this.newText.value);\n    this.props.toggleEditing();\n  }\n\n  render() {\n\n    const { todo, toggleEditing, index, editIndex } = this.props;\n    // const todo = this.props.todo;\n\n    if(editIndex === index) {\n      return (\n        <li className=\"list-group d-block\">\n          <form className=\"list-group-item\" style={{borderBottom: \"0\"}} onSubmit={this.editTodoSubmitHandler}>\n            <div className=\"form-group row m-0\">\n              <div className=\"col-9 pr-0 pl-0\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-sm\"\n                  defaultValue={todo.text}\n                  ref={\n                    (node) => {\n                      this.newText = node;\n                    }\n                  }\n                />\n              </div>\n              <div className=\"col-3 p-0\">\n                <button type=\"submit\" className=\"btn btn-sm btn-primary btn-outline-primary ml-1\">Save</button>\n                <button type=\"button\" onClick={()=>{ toggleEditing(null) }} className=\"btn btn-sm btn-dark btn-outline-dark ml-2\">Cancel</button>\n              </div>\n            </div>\n          </form>\n        </li>\n      );\n    }\n\n    return (\n      <li className=\"list-group-item\">\n        <div className=\"row\">\n          <div className=\"col-9 form-check\" style={{paddingTop: \"2px\"}}>\n            <label\n              className={`form-check-label d-block ${todo.completed ? \"completed\" : \"\"}`}\n              style={{paddingLeft: \"15px\"}}\n\n            >\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                value=\"\"\n                onChange={this.clickHandler}\n                checked={todo.completed ? \"checked\": \"\"}\n              />\n              {todo.text}\n            </label>\n          </div>\n          <div className=\"col-3 p-0\">\n            <button\n              type=\"button\"\n              onClick={() => toggleEditing(this.props.index)}\n              className=\"btn btn-info btn-sm ml-2\"\n              style={{visibility: todo.completed ? 'hidden' : 'visible'}}\n            >\n              Edit\n            </button>\n            <button type=\"button\" onClick={this.deleteTodo} className=\"btn btn-danger btn-sm ml-2\">Delete</button>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default TodoItem;","import React, { Component } from 'react';\nimport './bootstrap4.min.css';\nimport './App.css';\nimport AddTodo from './AddTodo';\nimport TodoItem from './TodoItem';\n\nclass App extends Component {\n\n  state = {\n    todos: JSON.parse(localStorage.getItem('todos')) || [],\n  }\n\n  toggleComplete = (index) =>{\n    const newTodos = this.state.todos.map((todo, i) => {\n      if(index === i ) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n      return todo;\n    });\n\n    this.setState({\n      todos: newTodos,\n    });\n  };\n\n  deleteTodoFromState = (index) => {\n    const newTodos = this.state.todos.filter((todo, i) => {\n      if(index === i){\n        return false;\n      }\n\n      return true;\n\n    });\n\n    this.setState({\n      todos: newTodos,\n    }, () => {\n      localStorage.setItem('todos', JSON.stringify(newTodos));\n    });\n  }\n\n  editTodoFromState = (index, newText) => {\n    const newTodos = this.state.todos.map((todo, i) => {\n      if(index === i) {\n        return {\n          ...todo,\n          text: newText,\n        }\n      }\n\n      return todo;\n    });\n\n    //localStorage.setItem('todos', JSON.stringify(newTodos));\n\n    this.setState({\n      todos: newTodos,\n    }, () => {\n      localStorage.setItem('todos', JSON.stringify(newTodos));\n    });\n  };\n\n  addTodoToState = (text) => {\n    const newTodos = [{\n      text: text,\n      completed: false,\n    }, ...this.state.todos];\n\n    this.setState({\n      todos: newTodos,\n    }, () => {\n      localStorage.setItem('todos', JSON.stringify(newTodos));\n    });\n  };\n\n  toggleEditing = (index) => {\n    this.setState({\n      editIndex: index\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <h5 className=\"col-12 text-center mb-4\">Simple TODO app</h5>\n          <div className=\"col-6 offset-3\">\n            <ul className=\"list-group\" style={{height: '281px', overflow: 'auto'}}>\n              {\n                this.state.todos.map((todo, index) => {\n                  return (\n                    <TodoItem\n                      todo={todo}\n                      key={index}\n                      index={index}\n                      toggleComplete={this.toggleComplete}\n                      deleteTodoFromState={this.deleteTodoFromState}\n                      editTodoFromState={this.editTodoFromState}\n                      toggleEditing={this.toggleEditing}\n                      editIndex={this.state.editIndex}\n                    />\n                  );\n                })\n              }\n            </ul>\n            <hr />\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <AddTodo\n                  addTodoToState={this.addTodoToState}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}